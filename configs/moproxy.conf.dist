{
    "listen": [
        // Defines where moproxy should listen and what external/outgoing
        // IP address should be used. There is a short and a long form.

        ///////////////////////////////////////////////////////////////////////
        // THE FOLLOWING ARE SAMPLE LISTEN CONFIGS. REMOVE FOR PRODUCTION USE!!
        ///////////////////////////////////////////////////////////////////////

        // Listen for SOCKS5 on 192.168.1.15:1080 and also use 192.168.1.15 for
        // outgoing connections:
        "socks5 192.168.1.15:1080",

        // Listen for HTTP on 192.168.1.16:8080 and use 172.10.1.20 for
        // outgoing connections (long form with more explicit syntax):
        {
            "type": "http",
            "internal": "192.168.1.16:8080",
            "external": "172.10.1.20"
        },

        // Listen for SOCKS5 on 192.168.1.17:1080 and use 172.10.1.20 for
        // outgoing connections (short form):
        "socks5 192.168.1.16:1080 172.10.1.20",

        // Listen for SOCKS5 on IPv6 address [fec0::aaaa:bbbb]:1080 (please note
        // the brackets!) and use IPv4 172.10.1.22 for outgoing connections:
        "socks5 [2001:0DB8::1234]:1080 172.10.1.22"
    ],
    "access": {
        "clientRules": [
            // Client rules control which clients are allowed to connect to
            // a proxy (or a set of proxies) defined by addresses or protocol.
            // They also control whether a client is required to do a username
            // and password authentication.
            //
            // +--------+ [- client rules -] +-------+               +--------+
            // | client |------------------->| proxy |-------------->| remote |
            // +--------+                    +-------+               +--------+
            //
            // The rules are evaluated in sequence until a match is found
            // ("first match wins").
            // The last built-in rule is "deny from all to all".
            //
            // The format is as following:
            // "(allow|deny) from <client> to (<internal>|<proxy-type>) [with auth <auth-name>]"
            //
            // <client> is the client's IP address or IP address range or "all"
            // <internal> is the internal proxy listening IP address or "all"
            // <proxy-type> is either "socks5" or "http"
            //
            // The optional "with auth" attribute adds a username/password
            // authentication requirement to the connections matching the given rule.
            //
            // <auth-name> is the authenticator as defined in section "auth"
            //             that is being used for authentication

            //////////////////////////////////////////////////////////////
            // THE FOLLOWING ARE SAMPLE RULES. REMOVE FOR PRODUCTION USE!!
            //////////////////////////////////////////////////////////////

            // no authentication for all clients from 192.168.1.xxx to any
            // configured proxy on port 1080
            "allow from 192.168.1.0/24 to 0.0.0.0:1080",

            // no authentication for any client to any http proxy
            "allow from all to http",

            // authenticate any other client for any proxy with "mySimpleAuth"
            "allow from all to all with auth mySimpleAuth"
        ],
        "proxyRules": [
            // Proxy rules control whether a client is allowed to connect
            // to a given remote destination through a proxy defined under "listen".
            // These rules are ONLY evaluated AFTER the client has passed any
            // client rules defined under "clientRules".
            //
            // +--------+                    +-------+               +--------+
            // | client |------------------->| proxy |-------------->| remote |
            // +--------+                    +-------+               +--------+
            //      [------------------ proxy rules ---------------------]
            //
            // The rules are evaluated in sequence until a match is found
            // ("first match wins"). That means, the first rule
            // matched is the rule that will be used to allow or deny a
            // particular proxy connection.
            // The last built-in rule is "deny from all to all".
            //
            // The format is as following:
            // "(allow|deny) from <client> [via <internal>|<auth-name>] to <remote>"
            //
            // <client> is the client's IP address or IP address range or "all"
            // <remote> is the remotes's IP address or IP address range or "all"
            //
            // The optional "via" attribute restricts the rule to either an <internal>
            // proxy listening IP address or to an <auth-name> authenticator.
            //
            // <internal> is the internal proxy listening IP address or "all"
            // <auth-name> is the authenticator as defined in section "auth"
            //             Use "none" for no authentication

            //////////////////////////////////////////////////////////////
            // THE FOLLOWING ARE SAMPLE RULES. REMOVE FOR PRODUCTION USE!!
            //////////////////////////////////////////////////////////////

            // Deny traffic from any un-authenticated source
            "deny from all via none to all"

            // Allow traffic from anywhere to anywhere for any connection
            // authenticated with authenticator "mySimpleAuth"
            "allow from all via mySimpleAuth to all",

            // Allow traffic from 192.168.2.137 to everywhere (IPv4 and IPv6)
            // (in long form):
            {
                "type": "allow",
                "from": "192.168.2.137",
                "to": "all"
            },

            // ... but deny traffic from 192.168.2.0/24 to 172.10.1.100/16
            // (in short form):
            "deny from 192.168.2.0/24 to 172.10.1.100/16",
            {
                "type": "deny",
                "from": "192.168.2.0/24",
                "to": "172.10.0.0/16"
            },

            // Allow traffic from everywhere (IPv4 and IPv6) to 1.1.1.1
            "allow from all to 1.1.1.1"

        ],
        "auth": {
            // Defines the authentication methods that can be used in
            // "authRules"
            "mySimpleAuth": {
                "type": "static",
                "username": "my-username",
                "password": "this-is-not-secure",
            }
        }
    },
    "timeout": {
        "tcp": {
            // The number of seconds the server will wait for a connect
            // initiated on behalf of the socks-client to complete. The
            // default is 30 seconds.
            // Setting it to 0 will use the systems default.
            "connect": 30,

            // The number of seconds a client can spend negotiating with the
            // server for a socks session before the server will close the
            // connection to the client. The default is 30 seconds.
            // Set it to 0 for forever, though that is strongly discouraged.
            "negotiate": 30,

            // KeepAlive specifies the interval between keep-alive
            // probes are sent for an active network connection. The default
            // is 30 seconds.
            // Set it to 0 to use Go's default (currently 15 seconds)
            "keepAlive": 30
        },
        "http": {
            // HTTP keep-alive timeout for plain HTTP proxy requests
            "keepAlive": 300
        }
    }
}
